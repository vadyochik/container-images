name: Create and publish a Docker image

on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string
      version:
        required: false
        type: string
      build_args:
        required: false
        type: string
      tag_latest:
        default: true
        required: false
        type: boolean

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/${{ inputs.image }}

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ inputs.version }},enable=${{ inputs.version != '' }}
            type=raw,value={{date 'YYYYMMDD'}}-{{branch}}-{{sha}},enable=${{ inputs.version == '' }}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') && inputs.tag_latest }}
          labels: |
              org.opencontainers.image.title=${{ inputs.image }}
              org.opencontainers.image.description=${{ inputs.image }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: "{{defaultContext}}:${{ inputs.image }}"
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: ${{ inputs.build_args }}
          provenance: false
